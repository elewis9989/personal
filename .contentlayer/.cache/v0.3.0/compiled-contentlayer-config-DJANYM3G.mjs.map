{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport rehypeSlug from 'rehype-slug';\nimport remarkFrontmatter from 'remark-frontmatter';\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The title of the post',\n      required: true,\n    },\n    excerpt: {\n      type: 'string',\n      description: 'The excerpt of the post',\n      required: true,\n    },\n    date: {\n      type: 'string',\n      description: 'The date of the post',\n      required: true,\n    },\n    coverImage: {\n      type: 'string',\n      description: 'The cover image of the post',\n      required: false,\n    },\n    ogImage: {\n      type: 'string',\n      description: 'The og cover image of the post',\n      required: false,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (post) => `/blog/posts/${post._raw.flattenedPath}`,\n    },\n  },\n}));\n\nconst prettyCodeOptions = {\n  theme: 'material-theme-palenight',\n  onVisitLine(node) {\n    if (node.children.length === 0) {\n      node.children = [{ type: 'text', value: ' ' }];\n    }\n  },\n  onVisitHighlightedLine(node) {\n    node.properties.className.push('highlighted');\n  },\n  onVisitHighlightedWord(node) {\n    node.properties.className = ['highlighted', 'word'];\n  },\n};\n\nexport default makeSource({\n  contentDirPath: 'content',\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [remarkFrontmatter],\n    rehypePlugins: [\n      rehypeSlug,\n      [rehypeAutolinkHeadings, { behavior: 'wrap' }],\n      [rehypePrettyCode, prettyCodeOptions],\n    ],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,uBAAuB;AAEvB,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,eAAe,KAAK,KAAK;AAAA,IAC9C;AAAA,EACF;AACF,EAAE;AAEF,IAAM,oBAAoB;AAAA,EACxB,OAAO;AAAA,EACP,YAAY,MAAM;AAChB,QAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,WAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,IAC/C;AAAA,EACF;AAAA,EACA,uBAAuB,MAAM;AAC3B,SAAK,WAAW,UAAU,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,uBAAuB,MAAM;AAC3B,SAAK,WAAW,YAAY,CAAC,eAAe,MAAM;AAAA,EACpD;AACF;AAEA,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,iBAAiB;AAAA,IACjC,eAAe;AAAA,MACb;AAAA,MACA,CAAC,wBAAwB,EAAE,UAAU,OAAO,CAAC;AAAA,MAC7C,CAAC,kBAAkB,iBAAiB;AAAA,IACtC;AAAA,EACF;AACF,CAAC;",
  "names": []
}
